/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.wppatend.wppatendclient;

import br.com.wppatend.wppatendclient.models.Finalizacao;
import br.com.wppatend.wppatendclient.models.Protocolo;
import br.com.wppatend.wppatendclient.restapiclient.ApiReturn;
import br.com.wppatend.wppatendclient.restapiclient.EstadoOperadorInfo;
import br.com.wppatend.wppatendclient.restapiclient.RestApiClient;
import br.com.wppatend.wppatendclient.restapiclient.User;
import br.com.wppatend.wppatendclient.threads.ThreadConsultaProtocolo;
import br.com.wppatend.wppatendclient.threads.ThreadPrintaChat;
import java.awt.Color;
import java.awt.Cursor;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;

/**
 *
 * @author pge
 */
public class FormAtendimento extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form FormAtendimento
     */
    public FormAtendimento(User user) {
        this.user = user;
        initComponents();
        setaNomeOperador();
        instanciaApiClient();
        iniciaEstadoOperador();
        carregaFinalizacoes();
    }
    
    private void setaNomeOperador() {
        jLabelOperador.setText(String.format("Operador: %1$s (%2$s)", user.getUserName(), user.getName()));
    }
    
    private void instanciaApiClient() {
        try {
            apiClient = new RestApiClient();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao iniciar o cliente da API\n"
                    + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void iniciaEstadoOperador() {
        estadoOperadorInfo = new EstadoOperadorInfo();
        estadoOperadorInfo.setIdUser(user.getId());
        estadoOperadorInfo.setDisponivel(false);
        estadoOperadorInfo.setEmAtendimento(false);
    }
    
    public void alteraEstadoOperador() {
        apiClient.alteraEstadoOperador(estadoOperadorInfo.getIdUser(), 
                estadoOperadorInfo.getDisponivel(), estadoOperadorInfo.getEmAtendimento());
    }
    
    public void habilitaAtendimento() {
        jLabelEstadoOperador.setText("Em atendimento");
        jLabelEstadoOperador.setForeground(EM_ATENDIMENTO_COLOR);
    }
    
    public void desabilitaAtendimento() {
        if(jToggleButton1.isSelected()) {
            jLabelEstadoOperador.setText("On line");
            jLabelEstadoOperador.setForeground(ON_LINE_COLOR);
        } else {
            jLabelEstadoOperador.setText("Disponível");
            jLabelEstadoOperador.setForeground(DISPONIVEL_COLOR);
            consultaProtocolo = new ThreadConsultaProtocolo(user);
            consultaProtocolo.addObserver(this);
            Thread t = new Thread(consultaProtocolo);
            t.start();
        }
        
        
    }
    
    private void carregaFinalizacoes() {
        finalizacoes = apiClient.getFinalizacoes();
    }
    
    public EstadoOperadorInfo getEstadoOperadorInfo() {
        return estadoOperadorInfo;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabelEstadoOperador = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton4 = new javax.swing.JButton();
        jLabelOperador = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("WPPAtendimento");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Estado do operador"));

        jLabelEstadoOperador.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabelEstadoOperador.setForeground(new java.awt.Color(128, 124, 157));
        jLabelEstadoOperador.setText("On line");

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pause.png"))); // NOI18N
        jToggleButton1.setSelected(true);
        jToggleButton1.setText("Pausa");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logout.png"))); // NOI18N
        jButton4.setText("Sair");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabelOperador.setText("Operador: ag001 (Carlos Eduardo Selhorst)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabelOperador)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelEstadoOperador, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEstadoOperador)
                    .addComponent(jLabelOperador))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            
            consultaProtocolo.parar();
            
            ApiReturn ret = apiClient.logout(user.getId());
            
            if(ret.isError()) {
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                JOptionPane.showMessageDialog(this, "Ocorreu um erro ao executar o logout remoto:\n"
                    + ret.getMessage() + "\nContate o administrador do sistema.", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                System.exit(0);
            }
            
        } catch (Exception e) {
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao executar o logout remoto:\n"
                    + e.getMessage() + "\nContate o administrador do sistema.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            //RestApiClient client = new RestApiClient();
            
            jButton4.setEnabled(jToggleButton1.isSelected());
            if(jToggleButton1.isSelected()) {
                jLabelEstadoOperador.setText("On line");
                jLabelEstadoOperador.setForeground(ON_LINE_COLOR);
                estadoOperadorInfo.setDisponivel(false);
                if(consultaProtocolo != null) {
                    consultaProtocolo.parar();
                }
            } else {
                estadoOperadorInfo.setDisponivel(true);
                
                jLabelEstadoOperador.setText("Disponível");
                jLabelEstadoOperador.setForeground(DISPONIVEL_COLOR);
                consultaProtocolo = new ThreadConsultaProtocolo(user);
                consultaProtocolo.addObserver(this);
                Thread t = new Thread(consultaProtocolo);
                t.start();
            }
            alteraEstadoOperador();
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } catch (Exception e) {
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao executar o comando remoto:\n"
                    + e.getMessage() + "\nContate o administrador do sistema.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
            
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    @Override
    public void update(Observable o, Object arg) {
        protocolo = (Protocolo) arg;
        habilitaAtendimento();
        //monitorChat = new ThreadPrintaChat(protocolo, jTextPaneChat);
        //monitorChat.start();
        estadoOperadorInfo.setEmAtendimento(true);
        alteraEstadoOperador();
        apiClient.enviaMensagem(protocolo.getContato(), String.format("Olá! Me chamo %1$s e seu número de protocolo é %2$s. Em que posso ajudar?", user.getName(), protocolo.getNumero()), protocolo.getId());
        FormAtendimentoPopUp f = new FormAtendimentoPopUp(this, true, user, protocolo, apiClient, this);
        f.setVisible(true);
        //Finalizacao fin = f.getFinalizacao();
        //f.dispose();
        //estadoOperadorInfo.setEmAtendimento(false);
        //alteraEstadoOperador();
        //apiClient.encerraProtocolo(protocolo.getId(), fin.getId());
        //desabilitaAtendimento();
    }
    
    private User user;
    private RestApiClient apiClient;
    private ThreadConsultaProtocolo consultaProtocolo;
    private ThreadPrintaChat monitorChat;
    private static final Color ON_LINE_COLOR = new Color(128, 124, 157);
    private static final Color DISPONIVEL_COLOR = Color.GREEN;
    private static final Color EM_ATENDIMENTO_COLOR = new Color(255, 140, 0);
    private Protocolo protocolo;
    private EstadoOperadorInfo estadoOperadorInfo;
    private List<Finalizacao> finalizacoes;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabelEstadoOperador;
    private javax.swing.JLabel jLabelOperador;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    
}
